!function(e){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).BoldEventStream=e()}}(function(){return function(){return function e(t,n,o){function i(l,s){if(!n[l]){if(!t[l]){var a="function"==typeof require&&require;if(!s&&a)return a(l,!0);if(r)return r(l,!0);var c=new Error("Cannot find module '"+l+"'");throw c.code="MODULE_NOT_FOUND",c}var u=n[l]={exports:{}};t[l][0].call(u.exports,function(e){return i(t[l][1][e]||e)},u,u.exports,e,t,n,o)}return n[l].exports}for(var r="function"==typeof require&&require,l=0;l<o.length;l++)i(o[l]);return i}}()({1:[function(e,t,n){let o={json:function(){return{type:"custom",status:"success"}}},i=function(e){return new Promise(function(t,n){null!=e.eventsToSendBuffer&&0!=e.eventsToSendBuffer.length||t(o),e.boldEventStreamConfiguration.Commons.enableConsoleLogging&&console.log("Ajax to server - Started ");let i=e.eventsToSendBuffer;e.eventsToSendBuffer=[],fetch(e.boldEventStreamConfiguration.AjaxDetails.eventsPostEndpointUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)}).then(function(o){e.boldEventStreamConfiguration.Commons.enableConsoleLogging&&console.log("Ajax to server - Completed. Resp Code - "+o.status),o.ok?t(o):(e.boldEventStreamConfiguration.Commons.enableConsoleLogging&&console.log("Ajax to server - Failed."),e.eventsToSendBuffer=i.concat(e.eventsToSendBuffer),n(new Error("Error in Ajax Call with status -  "+o.status)))}).catch(function(t){e.boldEventStreamConfiguration.Commons.enableConsoleLogging&&console.log("Ajax to server - Failed."),e.eventsToSendBuffer=i.concat(e.eventsToSendBuffer),n(t)})})};t.exports={ajaxCreateClientObject:function(e){e.Commons.enableConsoleLogging&&console.log("Client Creation Process Started For Ajax.");let t={boldEventStreamConfiguration:e,eventsToSendBuffer:[],syncIntervalObject:-1,ajaxCreateConnectionAndSendEvents:i};return e.AjaxDetails.eventsSyncTimeInMillis>0&&(t.syncIntervalObject=setInterval(function(){if(null!=t.eventsToSendBuffer&&t.eventsToSendBuffer.length>0)return t.boldEventStreamConfiguration.Commons.enableConsoleLogging&&console.log("Time Interval Reached."),t.ajaxCreateConnectionAndSendEvents(t)},e.AjaxDetails.eventsSyncTimeInMillis)),e.Commons.enableConsoleLogging&&console.log("Client Creation Process Successfull For Ajax."),Promise.resolve(t)},ajaxSendEventToServer:function(e,t,n){return new Promise(function(o,r){n.forcePush||0==e.boldEventStreamConfiguration.AjaxDetails.eventsSyncTimeInMillis||e.eventsToSendBuffer.length+1>=e.boldEventStreamConfiguration.AjaxDetails.eventsBufferSize?(e.boldEventStreamConfiguration.Commons.enableConsoleLogging&&console.log("Event Added To Queue And Send Started."),e.eventsToSendBuffer.push(t),i(e).then(function(){o()}).catch(function(e){r(e)})):(e.boldEventStreamConfiguration.Commons.enableConsoleLogging&&console.log("Event Added To Queue."),e.eventsToSendBuffer.push(t),o())})},ajaxSendEventToServerInBulk:function(e,t,n){}}},{}],2:[function(e,t,n){let o=function(e,t,n,o){return new Promise(function(i,l){Promise.resolve().then(function(){if(!t.pahoClient.isConnected()){let e=r();return e.then(function(){}),e}}).then(function(){let i=o.overrideTopicToBeUsed||n.EventType||t.boldEventStreamConfiguration.MqttDetails.defaultTopicToSend;t.boldEventStreamConfiguration.Commons.enableConsoleLogging&&console.log("Sending Message To Topic- "+i);let r=JSON.stringify(n),l=new e.Paho.MQTT.Message(r);l.destinationName=i,t.pahoClient.send(l),t.boldEventStreamConfiguration.Commons.enableConsoleLogging&&console.log("Message Sent To Topic- "+i)}).then(function(){i()}).catch(function(e){l(e)})})},i=function(e,t,n){e.boldEventStreamConfiguration.Commons.enableConsoleLogging&&console.log("New Message Received on Topic - "+t.destinationName),n&&"function"==typeof n&&n(t)},r=function(e){return new Promise(function(t,n){try{e.boldEventStreamConfiguration.Commons.enableConsoleLogging&&console.log("Connecting to "+e.boldEventStreamConfiguration.MqttDetails.mqttHost+":"+e.boldEventStreamConfiguration.MqttDetails.mqttPort+" ClientId- "+e.pahoClientId);let o={onSuccess:function(){l(e,t)},onFailure:function(t){s(e,new Error(t.errorMessage),n)},userName:e.boldEventStreamConfiguration.MqttDetails.mqttUserName,password:e.boldEventStreamConfiguration.MqttDetails.mqttPassword,useSSL:e.boldEventStreamConfiguration.MqttDetails.mqttIsSecureConnection};e.pahoClient.connect(o)}catch(t){let o=null;o=t instanceof Error?t:t&&t instanceof Object&&t.errorMessage?new Error(t.errorMessage):new Error("Error occoured while connecting to server - "+t),s(e,o,n)}})},l=function(e,t){e.boldEventStreamConfiguration.Commons.enableConsoleLogging&&console.log("Connection to "+e.boldEventStreamConfiguration.MqttDetails.mqttHost+":"+e.boldEventStreamConfiguration.MqttDetails.mqttPort+" is Successful."),e.boldEventStreamConfiguration.MqttDetails.onConnectSuccessCallback&&"function"==typeof e.boldEventStreamConfiguration.MqttDetails.onConnectSuccessCallback&&e.boldEventStreamConfiguration.MqttDetails.onConnectSuccessCallback(),t()},s=function(e,t,n){e.boldEventStreamConfiguration.Commons.enableConsoleLogging&&console.log("Connection to "+e.boldEventStreamConfiguration.MqttDetails.mqttHost+":"+e.boldEventStreamConfiguration.MqttDetails.mqttPort+" failed, with message - '"+t.message+"'"),e.boldEventStreamConfiguration.MqttDetails.onConnectFailCallback&&"function"==typeof e.boldEventStreamConfiguration.MqttDetails.onConnectFailCallback&&e.boldEventStreamConfiguration.MqttDetails.onConnectFailCallback(t),n(t)};t.exports={mqttCreateClientObjectAndConnect:function(e,t){return new Promise(function(n,o){let i={boldEventStreamConfiguration:t,pahoClient:null,pahoClientId:""};t.Commons.enableConsoleLogging&&console.log("Client Creation Process Started For Mqtt."),i.pahoClientId=t.MqttDetails.clientIdPrefix+parseInt(100*Math.random()),i.pahoClient=new e.Paho.MQTT.Client(t.MqttDetails.mqttHost,t.MqttDetails.mqttPort,i.pahoClientId),r(i).then(function(){t.Commons.enableConsoleLogging&&console.log("Client Creation Process Successfull For Mqtt."),n(i)}).catch(function(e){t.Commons.enableConsoleLogging&&console.log("Client Creation Process Failed For Mqtt."),o(e)})})},mqttSendEventToServer:o,mqttSendEventToServerInBulk:function(e,t,n){return new Promise(function(i,r){if(null!=t&&!Array.isArray(t))throw new Error("Event Array Not Initialized Properly.");let l=[];for(let i=0;i<t.length;i++)l.push(o(e,t[i]),n);Promise.all(l).then(function(){i()}).catch(function(e){r(e)})})},mqttSubscribeToTopic:function(e,t){return new Promise(function(n,o){e.pahoClient.onMessageArrived=function(n){i(e,n,t.callBackFunction)},e.pahoClient.subscribe(t.topicToSubscribe),e.boldEventStreamConfiguration.Commons.enableConsoleLogging&&console.log("Subscribed to Topic- "+t.topicToSubscribe),n()})}}},{}],3:[function(e,t,n){const o={Default:"de",Mqtt:"mq",Ajax:"aj",All:"all"};class i{constructor(){this.sendClientToUse=o.Default,this.forcePush=!1,this.overrideTopicToBeUsed="",this.qos=0}}class r extends i{constructor(){}}class l{constructor(){this.AjaxDetails={eventsPostEndpointUrl:"/api/values",eventsSyncTimeInMillis:1e4,eventsBufferSize:10},this.MqttDetails={pahoMqttUrl:"https://cdnjs.cloudflare.com/ajax/libs/paho-mqtt/1.0.1/mqttws31.min.js",clientIdPrefix:"jsClientID-",mqttHost:"",mqttPort:0,mqttUserName:"",mqttPassword:"",mqttIsSecureConnection:!0,onConnectFailCallback:null,onConnectSuccessCallback:null,defaultTopicToSend:"DefaultBoldClientEvents",connectionRetryConnectTime:2e3,connectionRetryCount:2},this.Commons={defaultClientToInitialize:o.Mqtt,defaultClientToUse:o.Mqtt,enableConsoleLogging:!1,enableErrorThrown:!1}}}const s={AutoComplete:{TTCSearched:"TTCSearched",TTCClicked:"TTCClicked",JobTitleSearched:"JobTitleSearched",JobTitleClicked:"JobTitleClicked",toString:()=>"AutoComplete"},Custom:{EnterBuilder:"EnterBuilder",DocDownloaded:"DocDownloaded",toString:()=>"Custom"},Page:{PageDetail:"PageDetail",toString:()=>"Page"},Widget:{Job:"Job",RR:"RR",toString:()=>"Widget"},Component:{Builder:"Builder",toString:()=>"Component"}};class a{constructor(e,t){this.EventType=e,this.EventSubType=t,this.CreatedOnUtc=(new Date).toISOString(),this.messageSendTimeUtc="added automatically by package",this.experimentID="",this.variantID="",this.widget="",this.userUID="",this.sourceAppUID="",this.visitorUID="",this.visitUID="",this.clickedCD="",this.wasClicked="",this.portalCD="",this.productCD="",this.locale=""}}class c extends a{constructor(e){super("AutoComplete",e),this.SearchTerm="",this.SuggestionPosition=0}}class u extends a{constructor(e){super("Custom",e),this.CustProp1="",this.CustProp2=0}}class d extends a{constructor(e){super("Page",e),this.PageProp1="",this.PageProp2=0}}class C extends a{constructor(e){super("Widget",e),this.WidgetProp1="",this.WidgetProp2=0}}class f extends a{constructor(e){super("Component",e),this.ComponentProp1="",this.ComponentProp2=0}}t.exports={Enums:{EventSubTypes:s,SendClientToUse:o},SubscribeToTopicProperties:class{constructor(){this.topicToSubscribe="",this.callBackFunction=null}},SendEventProperties:i,SendBulkEventProperties:r,SendBulkEventProperties:r,BoldEventStreamConfiguration:l,BaseBoldEvent:a,BoldAutoCompleteEvent:c,BoldComponentEvent:f,BoldCustomEvent:u,BoldPageEvent:d,BoldWidgetEvent:C,getNewBoldEventObject:function(e){if("string"!=typeof e)throw new Error("passed parameter 'EventSubTypes' to function 'getNewBoldEventObject'  is not a string. ");let t=null;switch(e){case s.Custom.EnterBuilder:case s.Custom.DocDownloaded:t=new u(e);break;case s.AutoComplete.TTCSearched:case s.AutoComplete.TTCClicked:case s.AutoComplete.JobTitleSearched:case s.AutoComplete.JobTitleClicked:t=new c(e);break;case s.Page.PageDetail:t=new d(e);break;case s.Widget.Job:case s.Widget.RR:t=new C(e);break;case s.Component.Builder:t=new f(e);break;default:throw new Error("EventType Not Sent Properly, Please use 'BoldEventStream.ClassInitializers.EventSubTypes' to set.")}return Object.seal(t),t},getNewConfigurationObject:function(){let e=new l;return Object.seal(e),e}}},{}],4:[function(e,t,n){let o=e("./eventModels_ES6"),i=e("./boldMqttEventHandler.js"),r=e("./boldAjaxEventHandler"),l={boldEventStreamConfiguration:null,mqttClientToBeUsed:null,ajaxClientToBeUsed:null,globalObject:null};l.boldEventStreamConfiguration=o.getNewConfigurationObject(),l.boldEventStreamConfiguration.enableErrorThrown=!0,l.boldEventStreamConfiguration.enableConsoleLogging=!0;let s=function(e,t){return null==t&&null!=self?(self.importScripts(e),Promise.resolve()):new Promise(function(n,o){try{let i=document.createElement("script");i.src=e,i.onload=n,i.onreadystatechange=n,t.appendChild(i)}catch(e){o(e)}})};t.exports={InitializeBoldStreamObjectAsync:function(e,t,n=null){let a=new Promise(function(a,c){if(e.BoldEventStream=e.BoldEventStream||{},l.boldEventStreamConfiguration.enableConsoleLogging&&console.log("Initialization Process Started."),null==n&&(n=o.getNewConfigurationObject()),!n instanceof o.BoldEventStreamConfiguration)throw new Error("boldEventStreamConfiguration  not instance of 'BoldEventStreamConfiguration' use getNewConfigurationObject()");if(l.boldEventStreamConfiguration=n,l.globalObject=e,n.Commons.defaultClientToInitialize==o.Enums.SendClientToUse.Default)throw new Error("boldEventStreamConfiguration.Commons.defaultClientToInitialize not set properly, set something other then default.");let u=[];if(n.Commons.defaultClientToInitialize==o.Enums.SendClientToUse.All||n.Commons.defaultClientToInitialize==o.Enums.SendClientToUse.Mqtt){let o=e.Paho||null;if(null==o&&null==t)throw new Error("Nither Paho found in Global Object nor parentHtmlTagForScripts is a HtmlNode ");let r=(null==o?s(n.MqttDetails.pahoMqttUrl,t):Promise.resolve()).then(function(){return i.mqttCreateClientObjectAndConnect(e,n)}).then(function(e){l.mqttClientToBeUsed=e});u.push(r)}if(n.Commons.defaultClientToInitialize==o.Enums.SendClientToUse.All||n.Commons.defaultClientToInitialize==o.Enums.SendClientToUse.Ajax){if(!e.fetch)throw new Error('Fetch Api Not Found in Global Scope, initialize different "defaultClientToInitialize". ');let t=r.ajaxCreateClientObject(n).then(function(e){l.ajaxClientToBeUsed=e});u.push(t)}BoldEventStream.GlobalObjects=l,Promise.all(u).then(function(){console.log("Initialization Process Completed."),a("Initialization Done")}).catch(function(e){c(e)})});return a.catch(function(e){if(console.log("%c BoldEventStream->InitializeBoldStreamObject Failed. Error is -  "+e.message,"background: Yellow;color:Red"),l.boldEventStreamConfiguration.Commons.enableErrorThrown)throw e}),a},subscribeToTopicAsync:function(e){let t=new Promise(function(t,n){if(null==e||null==e.topicToSubscribe)throw new Error("subscribeToTopicProperties is invalid or null.");if(null==l.mqttClientToBeUsed)throw new Error("MqttClient not initialized, cannot Subscribe Events.");i.mqttSubscribeToTopic(l.mqttClientToBeUsed,e)});return t.catch(function(e){if(console.log("%c BoldEventStream->subscribeToTopicAsync Failed. Error is -  "+e.message,"background: Yellow;color:Red"),l.boldEventStreamConfiguration.Commons.enableErrorThrown)throw e}),t},sendEventToServerAsync:function(e,t=null){let n=new Promise(function(n,s){if(null==t&&(t=new o.SendEventProperties),null==e||!e instanceof o.BaseBoldEvent)throw new Error("Event Object Not Initialized Properly Or type mismatch detected.");if(!t instanceof o.SendEventProperties)throw new Error("sendEventProperties Object Not Initialized Properly Or type mismatch detected.");if(t.sendClientToUse==o.Enums.SendClientToUse.Default&&(t.sendClientToUse=l.boldEventStreamConfiguration.Commons.defaultClientToUse),t.sendClientToUse==o.Enums.SendClientToUse.All)throw new Error("sendEventProperties.sendClientToUse not set properly, set something other then All.");if(e.messageSendTimeUtc=(new Date).toISOString(),t.sendClientToUse==o.Enums.SendClientToUse.Ajax){if(null==l.ajaxClientToBeUsed)throw new Error("AjaxClient not initialized, cannot send Events.");r.ajaxSendEventToServer(l.ajaxClientToBeUsed,e,t).then(function(e){n("Sent")}).catch(function(e){s(e)})}else if(t.sendClientToUse==o.Enums.SendClientToUse.Mqtt){if(null==l.mqttClientToBeUsed)throw new Error("MqttClient not initialized, cannot send Events.");i.mqttSendEventToServer(l.globalObject,l.mqttClientToBeUsed,e,t).then(function(e){n("Sent")}).catch(function(e){s(e)})}else s(new Error("sendEventProperties.sendClientToUse is not registered with framework."))});return n.catch(function(e){if(console.log("%c BoldEventStream->sendEventToServer Failed. Error is -  "+e.message,"background: Yellow;color:Red"),l.boldEventStreamConfiguration.Commons.enableErrorThrown)throw e}),n},ClassInitializers:{getNewConfigurationObject:o.getNewConfigurationObject,getNewBoldEventObject:o.getNewBoldEventObject,SendEventProperties:o.SendEventProperties,SendBulkEventProperties:o.SendBulkEventProperties,SubscribeToTopicProperties:o.SubscribeToTopicProperties},Enums:{EventSubTypes:o.Enums.EventSubTypes,SendClientToUse:o.Enums.SendClientToUse},GlobalObjects:null}},{"./boldAjaxEventHandler":1,"./boldMqttEventHandler.js":2,"./eventModels_ES6":3}]},{},[4])(4)});